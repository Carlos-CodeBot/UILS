/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

@import 'material-icons/iconfont/material-icons.css';

@import "./theme/variables.scss";
@import "./theme/fonts.scss";

/**
 * Set font-family globally
 */
* {
    font-family: var(--ion-font-family);
}

html,
body {
    font-family: sans-serif;
    background-color: var(--ion-color-background);
    transition: background-color var(--transition-background-time) ease;
}

ion-title,
h1,
h2,
h3,
p,
strong {
    color: var(--color-on-background);
    margin: 0;
}

ion-title,
h1,
h2 {
    font-family: var(--ion-font-family-semibold);
}

ion-icon {
    --ionicon-stroke-width: 42px;
}

.ripple-parent {
    position: relative;
    overflow: hidden;
}

.clamp {
    white-space: nowrap;

    @supports (-webkit-line-clamp: 1) {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: initial !important;
        display: -webkit-box !important;
        -webkit-line-clamp: 1;
        -webkit-box-orient: vertical;
    }

}

/** Clase para ocultar el texto y colocar '...' al final cuando supera los dos renglones  */
.clamp-2 {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    @supports (-webkit-line-clamp: 2) {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: initial !important;
        display: -webkit-box !important;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }
}

/** Lo mismo que la clase anterior pero para tres renglones */
.clamp-3 {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    @supports (-webkit-line-clamp: 3) {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: initial !important;
        display: -webkit-box !important;
        -webkit-line-clamp: 3;
        -webkit-box-orient: vertical;
    }
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* Works for Firefox */
input[type="number"] {
    -moz-appearance: textfield;
}

/* Change Autocomplete styles in Chrome*/
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus input:-webkit-autofill,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
    -webkit-text-fill-color: var(--color-input-text);
    -webkit-box-shadow: 0 0 0px 1000px var(--color-inactive-state) inset;
    transition: background-color 5000s ease-in-out 0s;
}

.toast {
    &-app {
        top: calc(-1 * var(--ion-safe-area-top));
    }

    &--info {
        --ion-color-base: var(--color-tertiary-container) !important;

        &::part(container) {
            color: var(--color-on-tertiary-container);
        }
    }

    &--success {
        --ion-color-base: var(--color-primary-container) !important;

        &::part(container) {
            color: var(--color-on-primary-container);
        }
    }

    &--warning {
        --ion-color-base: var(--color-warning-container) !important;

        &::part(container) {
            color: var(--color-on-warning-container);
        }
    }

    &--error {
        --ion-color-base: var(--color-error-container) !important;

        &::part(container) {
            color: var(--color-on-error-container);
        }
    }

    &--top-padding {
        // margin-top: var(--height-header);
        transform: translateY(var(--height-header));
    }

    &--bottom-padding {
        // margin-bottom: var(--height-bottom-nav);
        transform: translateY(calc(-1 * var(--height-bottom-nav)));
    }
}

.hide {
    display: none !important;
}

.dialog__container {
    background: none;

    &::part(content) {
        height: auto;
        background: none;
        box-shadow: none;
    }

    & app-dialog {
        height: auto;
        align-items: center;
        background-color: transparent;
    }
}

ion-button {
    text-transform: none;

    &[fill="clear"] {
        --border-radius: 50px;
        --color: var(--color-primary-container);
    }

    &.action-btn {
        font-size: 14px;
        width: 100%;
        --border-radius: var(--app-border-radius);
        --box-shadow: none;
        --padding-top: 0px;
        --padding-bottom: 0px;

        &.primary {
            --background: var(--color-primary-container);
            --color: var(--color-on-primary-container);
        }

        &.secondary {
            --background: white;
            --border-color: var(--ion-color-primary);
            --border-width: 1px;
            --color: var(--ion-color-primary);
        }

        &.transparent {
            --background: transparent;
            --color: var(--color-primary-container);
        }

        >i {
            width: 24px;
            margin-right: 8px;
        }
    }

    &.button--transparent::part(native) {
        background-color: transparent;
        box-shadow: none;
        color: var(--ion-color-secondary);
    }
}

.call-to-action {
    width: 100%;
    max-width: var(--max-width-button-c2a);
    font-size: 14px;
    font-family: var(--ion-font-family-semibold);
    --border-radius: 100px;
    --background: var(--color-primary-container);
    --color: var(--color-on-primary-container);
    --box-shadow: none;
}

.app-page ion-input,
.app-page ion-textarea {
    --background: var(--color-text-field) !important;
    --color: var(--color-input-text) !important;
    --placeholder-color: var(--color-on-text-field);
    --border-radius: var(--app-border-radius) !important;
    margin-bottom: 24px;

    & ion-icon {
        color: var(--color-input-text);
    }
}

ion-item.input-field {
    --background: var(--color-text-field);
    --color: var(--color-input-text);
    --placeholder-color: var(--color-on-text-field);
    --border-color: transparent;
    --border-radius: var(--app-border-radius);

    >ion-input {
        --padding-top: 0px !important;
        --padding-bottom: 0px !important;

        ::ng-deep input {
            line-height: 18px;
        }
    }

    &[aria-disabled="true"] {
        & i {
            color: var(--ion-color-disabled) !important;
        }
    }

    & ion-input {
        --border-radius: 0px;
    }

    & i,
    & ion-icon {
        color: var(--color-on-text-field);
    }

    >i {
        padding-right: 8px;
    }

    button[icon-only] {
        --icon-size: 24px;
        margin: 0;
        margin-left: 8px;
        background-color: transparent;
        display: flex;
        align-items: center;
        justify-content: center;

        & i {
            line-height: var(--icon-size);
            height: var(--icon-size);
            width: var(--icon-size);
            font-size: var(--icon-size);
        }
    }
}

ion-item.option {
    --color: var(--ion-color-secondary);
    --padding-start: 0;
    --min-height: 72px;
    --background: transparent;

    &.disabled {
        --color: var(--color-inactive-state);
    }

    & i {
        margin-right: 20px;
    }

    & ion-text {
        font-family: var(--ion-font-family-semibold);
    }
}

ion-input.input-field {
    --padding-start: 16px !important;
    --padding-end: 16px !important;

    &.inside-icon {
        & input {
            margin-right: 24px;
        }
    }
}

.loading--carnet .loading-wrapper {
    border-radius: 12px;

    & ion-spinner {
        color: var(--ion-color-primary);
    }
}

.loading--empty .loading-wrapper {
    display: none;
}

.loading-wrapper.sc-ion-loading-md {
    padding-top: 10px;
    padding-bottom: 10px;
    padding-inline-start: 10px;
    padding-inline-end: 10px;
}

ion-skeleton-text {
    height: 20px;
    border-radius: 4px;
    margin: 0;
    --background: var(--color-skeleton);
    --background-rgb: var(--color-skeleton-rgb);
}

ion-content.app-page {
    --background: var(--ion-color-background);

    &::part(scroll) {
        height: 100%;
        padding: 16px 8px;
        display: flex;
        flex-direction: column;
        background-color: var(--ion-color-background);
    }

    &.offline-view {
        &::part(scroll) {
            height: 100%;
        }
    }
}

ion-refresher {
    --ion-color-step-200: var(--color-outline);
    --ion-color-step-250: var(--color-surface);
}

.scroll-bar {

    @media screen and (min-width: 1281px) {

        ::part(scroll) {
            flex-grow: 1;
            min-height: var(--min-height-content);
        }

        ::-webkit-scrollbar {
            padding: 0 4px;
            width: 16px;
        }

        ::-webkit-scrollbar-track {
            background: var(--color-surface);
        }

        ::-webkit-scrollbar-thumb {
            background-color: var(--color-inactive-state);
            transition: background-color 0.1s ease;

            border-radius: 14px;
            border: 4px var(--color-surface) solid;
        }

        ::-webkit-scrollbar-thumb:hover {
            background-color: var(--color-outline);
        }

    }
}

.abs-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.go-back {
    font-weight: 600;
    color: var(--color-neutral-text);
}

.c-empty-data {
    --opacity-bg: 0.8;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    row-gap: 24px;

    margin: 16px var(--margin-lateral) 0;
    background-color: rgba(var(--color-surface-rgb), var(--opacity-bg));
    border-radius: var(--border-radius);
    padding: 32px 16px;

    > ion-img {
        width: 50%;
        max-width: 274px;
        margin: 48px auto 24px;
    }

    >ion-text {
        max-width: 450px;
        text-wrap: pretty;

        & * {
            opacity: 0.8;
            color: var(--ion-color-primary);
        }

        & h2 {
            font-size: 28px;
            margin-bottom: 16px;
        }

        & p {
            font-size: 22px;
            margin-bottom: 32px;
        }

        text-align: center;
    }
}

ion-fab[vertical=bottom] {
    bottom: 24px;
}

// small devices
@media screen and (max-width: 350px) {
    .c-empty-data {
        padding: 16px;
        margin-top: 8px;

        & ion-text h2 {
            font-size: 20px;
        }

        & ion-text p {
            font-size: 16px;
        }
    }
}

@media screen and (min-width:600px) and (max-width: 1281px) {
    ion-modal::part(content) {
        width: 70%;
    }
}

@media screen and (min-width: 480px) {
    body {
        background: rgb(255, 255, 255);
        background: radial-gradient(circle, rgba(255, 255, 255, 1) 0%, rgba(224, 224, 224, 1) 100%);

        display: flex;

        & ion-app {

            & ion-button,
            & button,
            & ion-item[role="listitem"],
            & ion-icon[name="help-circle"] {
                cursor: pointer;
            }
        }
    }

}

@media screen and (min-width: 1281px) {
    #router-outlet-home.no-header>*>ion-content::part(scroll) {
        min-height: calc(var(--min-height-content) + var(--height-header));
    }

    /** add custom scrollbar styles */
    ion-content.app-page {
        --offset-bottom: auto !important;
        overflow: auto;
        display: flex;

        &::part(scroll) {
            flex-grow: 1;
            min-height: var(--min-height-content);
        }

        &::-webkit-scrollbar {
            padding: 0 4px;
            width: 16px;
        }

        &::-webkit-scrollbar-track {
            background: var(--color-surface);
        }

        &::-webkit-scrollbar-thumb {
            background-color: var(--color-inactive-state);
            transition: background-color 0.1s ease;

            border-radius: 14px;
            border: 4px var(--color-surface) solid;
        }

        &::-webkit-scrollbar-thumb:hover {
            background-color: var(--color-outline);
        }


        .inner-scroll {
            scrollbar-width: thin;
        }
    }

    .bg-svg {
        position: absolute;
    }
}
